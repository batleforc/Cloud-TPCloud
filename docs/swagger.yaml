basePath: /api
definitions:
  model.Action:
    properties:
      action:
        type: string
      icon:
        type: string
      title:
        type: string
    type: object
  model.Notification:
    properties:
      actions:
        items:
          $ref: '#/definitions/model.Action'
        type: array
      body:
        type: string
      icon:
        type: string
      image:
        type: string
      tag:
        type: string
      title:
        type: string
      vibrate:
        items:
          type: integer
        type: array
    type: object
  model.Task:
    properties:
      DeadLine:
        type: string
      id:
        type: string
      label:
        type: string
      status:
        type: boolean
    type: object
  routes.AddNotifBody:
    properties:
      subscription:
        $ref: '#/definitions/webpush.Subscription'
    type: object
  routes.AddTaskBody:
    properties:
      deadline:
        type: string
      label:
        type: string
    type: object
  routes.ChangeStatusTaskBody:
    properties:
      status:
        type: boolean
    type: object
  routes.EditDeadLineTaskBody:
    properties:
      deadline:
        type: string
    type: object
  routes.EditTitleTaskBody:
    properties:
      label:
        type: string
    type: object
  routes.SendNotifBody:
    properties:
      notif:
        $ref: '#/definitions/model.Notification'
    type: object
  webpush.Keys:
    properties:
      auth:
        type: string
      p256dh:
        type: string
    type: object
  webpush.Subscription:
    properties:
      endpoint:
        type: string
      keys:
        $ref: '#/definitions/webpush.Keys'
    type: object
info:
  contact: {}
  description: Api TODO List du cours de virtualisation
  title: Todolist Cloud Deployment
  version: "1.0"
paths:
  /notif:
    post:
      description: Add notification to the array of notification
      parameters:
      - description: notification
        in: body
        name: Notification
        required: true
        schema:
          $ref: '#/definitions/routes.AddNotifBody'
      responses: {}
      summary: Add notification to the array of notification
  /notif/send:
    post:
      description: Send notification to the array of notification
      parameters:
      - description: subscription
        in: body
        name: Sub
        required: true
        schema:
          $ref: '#/definitions/routes.SendNotifBody'
      responses: {}
      summary: Send notification to the array of notification
  /tache:
    get:
      description: get all todotask in mongodb
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Task'
            type: array
      summary: Allow the user to get all todotask
    post:
      description: create todotask in mongodb
      parameters:
      - description: Label
        in: body
        name: Label
        required: true
        schema:
          $ref: '#/definitions/routes.AddTaskBody'
      responses: {}
      summary: Allow the user to create todotask
  /tache/{id}:
    delete:
      parameters:
      - description: Task Id
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Task'
      summary: Delete todoTask
    get:
      description: get one todotask in mongodb
      parameters:
      - description: Task Id
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Task'
            type: array
      summary: Allow the user to get one todotask
    put:
      parameters:
      - description: Label
        in: body
        name: Label
        required: true
        schema:
          $ref: '#/definitions/routes.EditTitleTaskBody'
      - description: Task Id
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Task'
      summary: Edit todoTask Label
  /tache/{id}/change-statut:
    put:
      parameters:
      - description: Status
        in: body
        name: Label
        required: true
        schema:
          $ref: '#/definitions/routes.ChangeStatusTaskBody'
      - description: Task Id
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Task'
      summary: Edit todoTask Status
  /tache/{id}/deadline:
    put:
      parameters:
      - description: DeadLine
        in: body
        name: DeadLine
        required: true
        schema:
          $ref: '#/definitions/routes.EditDeadLineTaskBody'
      - description: Task Id
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Task'
      summary: Edit todoTask DeadLine
swagger: "2.0"
